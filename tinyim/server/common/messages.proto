syntax = "proto3";
package tinyim;

enum MsgType {
    PRIVATE = 0;
    GROUP = 1;
}

message SigninData {
    int64 user_id = 1;

    string password = 2;
    int32 client_timestamp = 3;

    string access_addr = 4;
    // client_last_msg_id
}

// 为了用户发送信息幂等性记录信息
message UserLastSendData{
    int64 user_id = 1;
    int64 msg_id = 2;
    int32 client_time = 3;  // unique for each user msg
    int32 msg_time = 4;
}

message Timestamp{
    int32 timestamp = 1;
}

message NewMsg {
    int64 user_id = 1;
    int64 peer_id = 2;
    MsgType msg_type = 4;
    string message = 5;

    int32 client_time = 6;
    int32 msg_time = 7;
}

message MsgId {
    int64 msg_id = 1;
}

message GroupId {
    int64 group_id = 1;
}

message UserId {
    int64 user_id = 1;
}

message UserIds {
    repeated int64 user_id = 1;
}

message UserInfo {
    int64 user_id = 1;
    string name = 2;

    // ...
}

message UserInfos {
    repeated UserInfo user_info = 1;
}

message GroupInfo {
    int64 group_id = 1;
    string name = 2;

    // ...
}

message GroupInfos {
    repeated GroupInfo group_info = 1;
}
message UserAndMsgId {
    int64 user_id = 1;
    int64 msg_id = 2;
}

message NewPrivateMsg {
    int64 sender = 1;
    int64 sender_msg_id = 2;

    int64 receiver = 3;
    int64 receiver_msg_id = 4;

    string message = 6;

    int32 msg_time = 7;
    int32 client_time = 8;
}

message NewGroupMsg {
    int64 group_id = 1;
    repeated UserAndMsgId user_and_msgids = 2;

    int64 sender_user_id = 3;
    int64 sender_msg_id = 4;

    string message = 5;
    int32 msg_time = 6;
    int32 client_time = 7;
}

enum DataType {
    NONE = 0;

    PRIVATE_MESSAGE = 1;
    GROUP_MESSAGE = 2;

    ADDUSER = 3;
    REMOVEUSER = 4;

    ADDGROUP = 5;
    REMOVEGROUP = 6;
    // ...
}

message Msg {
    int64 user_id = 1;  // may sender or receiver
    int64 msg_id = 4;

    int64 sender = 2;
    int64 receiver = 3; // may user or group

    string message = 5;
    int64 group_id = 6; // 0 user, another group

    // DataType data_type = 7;
    // MsgType msg_type = 5;

    int32 client_time = 8;
    int32 msg_time = 9;
}

message Msgs {
    repeated Msg msg = 1;
}

message MsgReply {
    // int64 user_id = 1;
    int64 msg_id = 3;

    int64 last_msg_id = 4;
    int32 msg_time = 2; // server record for client

    // more data
}

message MsgIdRange {
    int64 user_id = 1;
    int64 start_msg_id = 2;
    int64 end_msg_id = 3;
}

message Ping {
    int64 user_id = 1;

}

message Pong {
    int64 last_msg_id = 1;
    // more data
}


message Reply {
}
